name: Node CD

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config: 
          - { os: macos-latest, arch: x64, name: macos-latest }
          - { os: ubuntu-latest, arch: x64, name: ubuntu-latest }
          - { os: windows-latest, arch: x64, platform: x64, name: windows-latest }
          - { os: windows-latest, arch: ia32, platform: win32, name: windows-latest-32 }

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Use Node.js 8.x
        uses: actions/setup-node@v1
        with:
          node-version: 8.x
          architecture: ${{matrix.config.platform}} 
      - name: npm install
        run: |
          npm install
        env:
          npm_config_arch: ${{matrix.config.arch}} 
      - name: Lint
        run: |
          npm run lint
      - name: Rebuild leveldb for election
        if: contains(matrix.config.os, 'windows')
        run: |
          npm install --global node-gyp@latest
          npm config set node_gyp 
          npm run rebuild-leveldb
      - name: Build frontend
        run: |
          npm run build
        env:
          CI: true
      - name: Build leveldb
        run: | 
          npm run rebuild-leveldb
      - name: Publish
        run: |
          npm run dist -- --${{matrix.config.arch}}
        env:
          CI: true
          GITHUB_CI_REF: ${{ github.ref }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
      # - name: Update release notes
      #   if: contains(github.ref, '/tags/')
      #   run: |
      #     npm run gh-release
      #   env:
      #     GH_RELEASE_GITHUB_API_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Update website release
        if: contains(github.ref, '/tags/')
        run: bin/release_latest.js
        env:
          GITHUB_TOKEN: ${{ secrets.WEBSITE_GH_TOKEN }}
      - name: Cleanup artifacts
        run: |
          npx rimraf@2 'dist/!(*.exe|*.deb|*.AppImage|*.dmg)'
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.config.name }}
          path: dist
